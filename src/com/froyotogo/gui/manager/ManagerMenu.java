package com.froyotogo.gui.manager;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.util.Vector;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import com.froyotogo.Customer;
import com.froyotogo.User;
import com.froyotogo.db.databases.CustomerDB;
import com.froyotogo.db.databases.UserDB;
import com.froyotogo.gui.ChangePassword;
import com.froyotogo.gui.LoginScreen;

/**
 * GUI for the manager screen
 * 
 * Created using Netbeans
 * 
 * @author William Moffitt <willmfftt@gmail.com>
 * @version 1.0 12/10/13
 */
public class ManagerMenu extends javax.swing.JFrame implements ActionListener {

	/**
	 * Creates new form ManagerForm
	 */
	public ManagerMenu() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents() {

		jLabel1 = new javax.swing.JLabel();
		jSeparator1 = new javax.swing.JSeparator();
		jComboBox1 = new javax.swing.JComboBox<String>();
		jButton1 = new javax.swing.JButton();
		jScrollPane1 = new javax.swing.JScrollPane();
		jTable1 = new javax.swing.JTable();
		jButton2 = new javax.swing.JButton();
		jButton3 = new javax.swing.JButton();
		jButton4 = new javax.swing.JButton();
		jButton6 = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setTitle("FroYo ToGo - Manager Panel");
		setResizable(false);

		jLabel1.setText("Manager Panel");

		jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<String>(
				new String[] { "Customer", "Employee" }));
		jComboBox1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jComboBox1ActionPerformed(evt);
			}
		});

		jButton1.setText("Change Password");
		jButton1.addActionListener(this);

		tableModel = new DefaultTableModel(new Vector<String>(), header);
		jTable1.setModel(tableModel);
		jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
		jScrollPane1.setViewportView(jTable1);

		jButton2.setText("Add");
		jButton2.addActionListener(this);

		jButton3.setText("Delete");
		jButton3.addActionListener(this);

		jButton4.setText("Logout");
		jButton4.addActionListener(this);

		jButton6.setText("Create Newsletter");
		jButton6.addActionListener(this);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														layout.createSequentialGroup()
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING)
																				.addComponent(
																						jSeparator1)
																				.addGroup(
																						layout.createSequentialGroup()
																								.addComponent(
																										jLabel1)
																								.addPreferredGap(
																										javax.swing.LayoutStyle.ComponentPlacement.RELATED,
																										javax.swing.GroupLayout.DEFAULT_SIZE,
																										Short.MAX_VALUE)
																								.addComponent(
																										jButton1,
																										javax.swing.GroupLayout.PREFERRED_SIZE,
																										150,
																										javax.swing.GroupLayout.PREFERRED_SIZE))
																				.addGroup(
																						layout.createSequentialGroup()
																								.addComponent(
																										jComboBox1,
																										javax.swing.GroupLayout.PREFERRED_SIZE,
																										158,
																										javax.swing.GroupLayout.PREFERRED_SIZE)
																								.addGap(0,
																										0,
																										Short.MAX_VALUE))
																				.addComponent(
																						jScrollPane1,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						576,
																						Short.MAX_VALUE))
																.addContainerGap())
												.addGroup(
														javax.swing.GroupLayout.Alignment.TRAILING,
														layout.createSequentialGroup()
																.addComponent(
																		jButton6)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		Short.MAX_VALUE)
																.addComponent(
																		jButton2)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		jButton3)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		jButton4)
																.addGap(6, 6, 6)))));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel1)
												.addComponent(jButton1))
								.addGap(18, 18, 18)
								.addComponent(jSeparator1,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										10,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(14, 14, 14)
								.addComponent(jComboBox1,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addComponent(jScrollPane1,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										226,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jButton2)
												.addComponent(jButton3)
												.addComponent(jButton4)
												.addComponent(jButton6))
								.addContainerGap()));

		pack();
	}

	private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {

		setHeader(jComboBox1.getSelectedIndex());

	}

	private static void setHeader(int id) {

		switch (id) {

		case 0: // Customer
			header = new Vector<String>();
			header.add("Name");
			header.add("Address");
			header.add("Phone Number");
			header.add("Email");
			header.add("Birthday");
			resetTable();
			addTableHeader();
			setCustomerData();
			break;

		case 1: // Employee
			header = new Vector<String>();
			header.add("Username");
			header.add("Type");
			header.add("Salary");
			resetTable();
			addTableHeader();
			setUserData();
			break;

		}

	}

	private static void resetTable() {

		tableModel.setRowCount(0);

	}

	private static void addTableHeader() {

		tableModel.setColumnIdentifiers(header);

	}

	private static void setTableRow(Vector<String> data) {

		tableModel.addRow(data);

	}

	private static void setCustomerData() {

		resetTable();

		try {

			customerList = CustomerDB.readCustomer();

		} catch (SQLException e) {

			System.err.println("Error getting customer list: " + e.toString());

		}

		for (Customer customer : customerList) {

			Vector<String> data = new Vector<String>();
			data.add(customer.getFirstName() + " " + customer.getLastName());
			data.add(customer.getAddress());
			data.add(customer.getPhoneNum());
			data.add(customer.getEmail());
			data.add(customer.getBirthday());

			setTableRow(data);

		}

	}

	private static void setUserData() {

		resetTable();

		try {

			userList = UserDB.readUser();

		} catch (SQLException e) {

			System.err.println("Error retrieving user list: " + e.toString());

		}

		for (User user : userList) {

			Vector<String> data = new Vector<String>();
			data.add(user.getUsername());
			data.add(user.getUserType().equals("e") ? "Employee" : "Manager");
			data.add("$" + user.getSalary());

			setTableRow(data);

		}

	}

	@Override
	public void actionPerformed(ActionEvent evt) {

		String command = evt.getActionCommand();

		if (command.equals("Change Password")) {

			ChangePassword.showChangePasswordScreen();

		}

		if (command.equals("Add")) {

			if (jComboBox1.getSelectedIndex() == 0) {

				boolean newCustomer = CustomerAddScreen.showGUI();

				if (newCustomer)
					setCustomerData();

			}

			else {

				boolean newUser = UserAddScreen.showGUI();

				if (newUser)
					setUserData();

			}

		}

		if (command.equals("Delete")) {

			if (jComboBox1.getSelectedIndex() == 0) {

				if (jTable1.getSelectedRow() > -1) {

					Customer customer = customerList.get(jTable1
							.getSelectedRow());
					boolean deleted = CustomerDB.deleteCustomer(customer);

					if (deleted)
						setCustomerData();
					else
						JOptionPane.showMessageDialog(null,
								"Couldn't delete customer");

				}

			}

			else {

				if (jTable1.getSelectedRow() > -1) {

					User user = userList.get(jTable1.getSelectedRow());

					if (!user.getUsername().equals("admin") && !user.getUsername().equals(LoginScreen.user.getUsername())) {

						boolean deleted = UserDB.deleteUser(user);

						if (deleted)
							setUserData();
						else
							JOptionPane.showMessageDialog(null,
									"Couldn't delete user");

					}

					else
						JOptionPane.showMessageDialog(null,
								"Admin and Self cannot be deleted");

				}

			}

		}

		if (command.equals("Logout")) {
			
			LoginScreen.user = null;

			setVisible(false);
			LoginScreen.showLoginScreen();

		}
		
		if (command.equals("Create Newsletter")) {
			
			Newsletter.showGUI();
			
		}

	}

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void showGUI() {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed"
		// desc=" Look and feel setting code (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the
		 * default look and feel. For details see
		 * http://download.oracle.com/javase
		 * /tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager
					.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(ManagerMenu.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(ManagerMenu.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(ManagerMenu.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(ManagerMenu.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new ManagerMenu().setVisible(true);
				setHeader(jComboBox1.getSelectedIndex());
			}
		});
	}

	// Variables declaration - do not modify
	private static javax.swing.JButton jButton1;
	private static javax.swing.JButton jButton2;
	private static javax.swing.JButton jButton3;
	private static javax.swing.JButton jButton4;
	private static javax.swing.JButton jButton6;
	private static javax.swing.JComboBox<String> jComboBox1;
	private static javax.swing.JLabel jLabel1;
	private static javax.swing.JScrollPane jScrollPane1;
	private static javax.swing.JSeparator jSeparator1;
	private static javax.swing.JTable jTable1;
	private static javax.swing.table.DefaultTableModel tableModel;
	private static java.util.Vector<String> header;
	private static java.util.ArrayList<Customer> customerList;
	private static java.util.ArrayList<User> userList;
	// End of variables declaration

}
